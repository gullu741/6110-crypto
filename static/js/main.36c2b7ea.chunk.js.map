{"version":3,"sources":["component/gcd/input/GcdInput.js","component/gcd/output/GcdOutput.js","component/gcd/Gcd.js","component/ceasarCipher/input/ceasarCypherInput.js","component/ceasarCipher/output/ceasarCypherOutput.js","component/ceasarCipher/CeasaarCypher.js","component/shiftCypher/ShiftCypher.js","component/affineCypher/AffineCypher.js","App.js","reportWebVitals.js","index.js"],"names":["GcdInput","setOne","setTwo","computeGcd","className","TextField","label","type","onChange","e","parseInt","target","value","Button","variant","color","onClick","GcdOutput","result","c1","c2","c3","map","c","i","Gcd","props","useState","one","two","setResult","div","Math","floor","remainder","push","length","CeasarCypherInput","setEncryptValue","encryptValue","setDecryptValue","decryptValue","startEncryption","startDecryption","id","CeasarCypherOutput","output","CeasaarCypher","setOutput","setType","toLetters","num","mod","String","fromCharCode","toNumber","letter","charCodeAt","msg","toUpperCase","split","l","join","ShiftCypher","key","setKey","list","idx","AffineCypher","plain1","setPlain1","plain2","setPlain2","cipher1","setCipher1","cipher2","setCipher2","solve","setSolve","between","n","k","ci3","p3","startSolving","App","basename","process","to","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36c2b7ea.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Button, TextField} from \"@material-ui/core\";\r\n\r\nimport \"./GcdInput.scss\"\r\n\r\nfunction GcdInput({setOne,setTwo,computeGcd}) {\r\n    return (\r\n        <div className={\"gcdInputContainer\"}>\r\n            <h1>GCD</h1>\r\n            <h2>gcd(first,second)</h2>\r\n            <TextField className=\"input\" label={\"First\"}\r\n                       type={\"number\"}\r\n                       onChange={e=>setOne(parseInt(e.target.value))}\r\n\r\n            />\r\n            <TextField className=\"input\" label={\"Second\"}\r\n                       type={\"number\"}\r\n                       onChange={e=>setTwo(parseInt(e.target.value))}\r\n            />\r\n            <Button className=\"input\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={computeGcd}\r\n            >\r\n                Compute Gcd\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GcdInput;","import React from 'react';\r\nimport \"./GcdOutput.scss\"\r\nfunction GcdOutput({result}) {\r\n    if(result){\r\n        let {c1,c2,c3} = result;\r\n\r\n        return (\r\n            <div className=\"gcdOutputContainer\">\r\n                <table>\r\n                    <tbody>\r\n                    {\r\n                        c1.map((c,i)=>{\r\n                            return <tr>\r\n                                <td>{c}</td>\r\n                                <td>{c2[i]||0}</td>\r\n                                <td>{c3[i]||0}</td>\r\n                            </tr>\r\n                        })\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }else{\r\n        return null\r\n    }\r\n\r\n}\r\n\r\nexport default GcdOutput;","import React, {useState} from 'react';\r\nimport GcdInput from \"./input/GcdInput\";\r\nimport \"./Gcd.scss\";\r\nimport GcdOutput from \"./output/GcdOutput\";\r\n\r\nfunction Gcd(props) {\r\n    const [one, setOne] = useState(null);\r\n    const [two, setTwo] = useState(null);\r\n    const [result, setResult] = useState(null);\r\n\r\n    const computeGcd = () => {\r\n        if (one && two) {\r\n            let c1 = [one, two], c2 = [0], c3 = [0, 1];\r\n            let i = 0;\r\n            while (true) {\r\n                let div = Math.floor(c1[i] / c1[i + 1])\r\n                let remainder = c1[i] % c1[i + 1]\r\n                c2.push(div)\r\n                c1.push(remainder)\r\n                if (remainder === 0) {\r\n                    break\r\n                }\r\n                i++;\r\n            }\r\n\r\n            for (let i = 2; i < c2.length; i++) {\r\n                c3.push(c3[i - 2] - (c2[i - 1] * c3[i - 1]))\r\n            }\r\n            setResult({\r\n                c1, c2, c3\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"left\">\r\n                <GcdInput {...{setOne, setTwo, computeGcd}}/>\r\n            </div>\r\n            <div className=\"right\">\r\n                <GcdOutput result={result}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Gcd;","import React from 'react';\r\nimport {Button, TextField} from \"@material-ui/core\";\r\n\r\nfunction CeasarCypherInput({\r\n                               setEncryptValue,\r\n                               encryptValue,\r\n                               setDecryptValue,\r\n                               decryptValue,\r\n                               startEncryption,\r\n                               startDecryption\r\n                           }) {\r\n    return (\r\n        <div>\r\n            <TextField id=\"standard-basic\" label=\"Encrypt\"\r\n                       value={encryptValue}\r\n                       onChange={e=>setEncryptValue(e.target.value)}\r\n            />\r\n            <Button onClick={startEncryption}>Encrypt</Button>\r\n            <TextField id=\"standard-basic\" label=\"Decrypt\"\r\n                       value={decryptValue}\r\n                       onChange={e=>setDecryptValue(e.target.value)}\r\n            />\r\n\r\n            <Button onClick={startDecryption}>Decrypt</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CeasarCypherInput;","import React from 'react';\r\n\r\nfunction CeasarCypherOutput({type,output}) {\r\n    return (\r\n        <div>\r\n            <h1>{type}</h1>\r\n            <h2>{output}</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CeasarCypherOutput;","import React, {useState} from 'react';\r\nimport GcdInput from \"../gcd/input/GcdInput\";\r\nimport GcdOutput from \"../gcd/output/GcdOutput\";\r\nimport CeasarCypherInput from \"./input/ceasarCypherInput\";\r\nimport CeasarCypherOutput from \"./output/ceasarCypherOutput\";\r\n\r\nfunction CeasaarCypher(props) {\r\n    const [encryptValue, setEncryptValue] = useState(\"\");\r\n    const [decryptValue, setDecryptValue] = useState(\"\");\r\n    const [output, setOutput] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n\r\n    function toLetters(num) {\r\n        let mod = num % 26;\r\n        return String.fromCharCode(65 + mod)\r\n    }\r\n\r\n    function toNumber(letter) {\r\n        return (letter.charCodeAt(0) - 65)\r\n    }\r\n\r\n    const startEncryption = () => {\r\n        debugger\r\n        let msg = encryptValue.toUpperCase().split(\"\")\r\n        msg = msg.map(l=>toNumber(l))\r\n        msg = msg.map(l=>(((l)+3)%26))\r\n        msg = msg.map(l=>toLetters(l));\r\n        msg=msg.join(\"\")\r\n        setOutput(msg)\r\n        setType(\"Encrypted\")\r\n    }\r\n    const startDecryption = () => {\r\n        let msg = decryptValue.toUpperCase().split(\"\")\r\n        msg = msg.map(l=>(toLetters((toNumber(l)+23)%26))).join(\"\")\r\n        setOutput(msg)\r\n        setType(\"Decrypted\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"left\">\r\n                <CeasarCypherInput {...{\r\n                    encryptValue,\r\n                    setEncryptValue,\r\n                    decryptValue,\r\n                    setDecryptValue,\r\n                    startEncryption,\r\n                    startDecryption\r\n                }}/>\r\n            </div>\r\n            <div className=\"right\">\r\n                <CeasarCypherOutput {...{output, type}}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CeasaarCypher;","import React, {useState} from 'react';\r\nimport GcdInput from \"../gcd/input/GcdInput\";\r\nimport GcdOutput from \"../gcd/output/GcdOutput\";\r\nimport CeasarCypherInput from \"../ceasarCipher/input/ceasarCypherInput\";\r\nimport CeasarCypherOutput from \"../ceasarCipher/output/ceasarCypherOutput\";\r\nimport {Button, TextField} from \"@material-ui/core\";\r\n\r\nfunction ShiftCypher(props) {\r\n    const [encryptValue, setEncryptValue] = useState(\"\");\r\n    const [decryptValue, setDecryptValue] = useState(\"\");\r\n    const [output, setOutput] = useState([]);\r\n    const [type, setType] = useState(\"\");\r\n    const [key,setKey] = useState(0)\r\n\r\n    function toLetters(num) {\r\n        let mod = num % 26;\r\n        return String.fromCharCode(65 + mod)\r\n    }\r\n\r\n    function toNumber(letter) {\r\n        return (letter.charCodeAt(0) - 65)\r\n    }\r\n\r\n    const startEncryption = () => {\r\n        let msg = encryptValue.toUpperCase().split(\"\")\r\n        msg = msg.map(l=>toNumber(l))\r\n        msg = msg.map(l=>(((l)+((key<0?26+key:key)%26))%26))\r\n        msg = msg.map(l=>toLetters(l));\r\n        msg=msg.join(\"\")\r\n        setOutput([msg])\r\n        setType(\"Encrypted\")\r\n    }\r\n    const startDecryption = () => {\r\n\r\n        let msg = decryptValue.toUpperCase().split(\"\")\r\n        let list = []\r\n        for(let i = 1;i<26;i++){\r\n            list.push(msg.map(l=>(toLetters((toNumber(l)+(i)%26)))).join(\"\"))\r\n        }\r\n        setOutput(list)\r\n        setType(\"Decrypted\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"left\">\r\n                <div>\r\n                    <TextField id=\"standard-basic\" label=\"Encrypt\"\r\n                               value={encryptValue}\r\n                               onChange={e=>setEncryptValue(e.target.value)}\r\n                    />\r\n                    <TextField id=\"standard-basic\" label=\"Encrypt\"\r\n                                type=\"number\"\r\n                               value={key}\r\n                               onChange={e=>setKey(parseInt(e.target.value))}\r\n                    />\r\n                    <Button onClick={startEncryption}>Encrypt</Button>\r\n                    <TextField id=\"standard-basic\" label=\"Decrypt\"\r\n                               value={decryptValue}\r\n                               onChange={e=>setDecryptValue(e.target.value)}\r\n                    />\r\n\r\n                    <Button onClick={startDecryption}>Decrypt</Button>\r\n                </div>\r\n            </div>\r\n            <div className=\"right\">\r\n                <div>\r\n                    <h1>{type}</h1>\r\n                    <p>{output.map((l,idx)=><p>{l} ,key = {26-idx}</p>)}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ShiftCypher;","import React, {useState} from 'react';\r\nimport {Button, TextField} from \"@material-ui/core\";\r\n\r\nfunction AffineCypher(props) {\r\n\r\n    const [plain1, setPlain1] = useState(0);\r\n    const [plain2, setPlain2] = useState(0);\r\n    const [cipher1, setCipher1] = useState(0);\r\n    const [cipher2, setCipher2] = useState(0);\r\n    const [solve,setSolve] = useState(false)\r\n    const [result,setResult] = useState([])\r\n    const between = (num)=>(num>=0&&num<=25)\r\n    const mod = (n,k)=> {\r\n        return ((n%k)+k)%k;\r\n    };\r\n    const startSolving = ()=>{\r\n        debugger\r\n        let result=[]\r\n        let ci3 = cipher1-cipher2;\r\n        let p3 = plain1-plain2\r\n        result.push(<p>{cipher1} = {plain1}a+b mod26</p>)\r\n        result.push(<p>{cipher2} = {plain2}a+b mod26</p>)\r\n        result.push(<p>--------------------</p>)\r\n        result.push(<p>{ci3} = {p3}a+b mod26</p>)\r\n        result.push(<p>--------------------</p>)\r\n        result.push(<br/>)\r\n        result.push(<p>a = {ci3} ({p3})^-1 mod26</p>)\r\n        p3 = mod(p3,26)\r\n        result.push(<p>a = {ci3} ({p3})^-1 mod26</p>)\r\n\r\n        let c1 = [26, mod(p3,26)], c2 = [0], c3 = [0, 1];\r\n        let i = 0;\r\n        while (true) {\r\n            let div = Math.floor(c1[i] / c1[i + 1])\r\n            let remainder = c1[i] % c1[i + 1]\r\n            c2.push(div)\r\n            c1.push(remainder)\r\n            if (remainder === 0) {\r\n                break\r\n            }\r\n            i++;\r\n        }\r\n\r\n        for (let i = 2; i < c2.length; i++) {\r\n            c3.push(c3[i - 2] - (c2[i - 1] * c3[i - 1]))\r\n        }\r\n        result.push(<p>----------------------</p>)\r\n        result.push(c1.map((c,i)=>{\r\n            return <tr>\r\n                <td>{c}</td>\r\n                <td>#</td>\r\n                <td>{c2[i]||0}</td>\r\n                <td>#</td>\r\n                <td>{c3[i]||0}</td>\r\n            </tr>\r\n        }))\r\n        setResult(result)\r\n        setSolve(true)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"left\">\r\n                <div>\r\n                    <TextField id=\"standard-basic\" label=\"P1\"\r\n                               value={plain1}\r\n                               onChange={e=>setPlain1(parseInt(e.target.value))}\r\n                    />\r\n                    <TextField id=\"standard-basic\" label=\"C1\"\r\n                               type=\"number\"\r\n                               value={cipher1}\r\n                               onChange={e=>setCipher1(parseInt(e.target.value))}\r\n                    />\r\n                    <TextField id=\"standard-basic\" label=\"P2\"\r\n                               value={plain2}\r\n                               onChange={e=>setPlain2(parseInt(e.target.value))}\r\n                    />\r\n                    <TextField id=\"standard-basic\" label=\"C2\"\r\n                               type=\"number\"\r\n                               value={cipher2}\r\n                               onChange={e=>setCipher2(parseInt(e.target.value))}\r\n                    />\r\n\r\n                    <Button onClick={()=>{\r\n                        if(between(plain2)&&between(cipher2)&&between(plain1)&&between(cipher2)){\r\n                            startSolving()\r\n                        }\r\n                    }}>Solve</Button>\r\n                </div>\r\n            </div>\r\n            <div className=\"right\">\r\n                {solve&&<div>\r\n                    {result}\r\n                </div>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AffineCypher;","import './App.css';\nimport Gcd from \"./component/gcd/Gcd\";\nimport CeasaarCypher from \"./component/ceasarCipher/CeasaarCypher\";\nimport ShiftCypher from \"./component/shiftCypher/ShiftCypher\";\nimport AffineCypher from \"./component/affineCypher/AffineCypher\";\nimport {BrowserRouter, Switch, Route, Link} from \"react-router-dom\";\n\nfunction App() {\n    return (\n        <BrowserRouter basename={process.env.REACT_APP_BASE_PATH}>\n            <div className={\"app\"}>\n                <div className={\"sidenav\"}>\n                    <ul>\n                        <tr><Link to={\"./\"}>GCD</Link></tr>\n                        <tr><Link to={\"./affine\"}>Affine</Link></tr>\n                        <tr><Link to={\"./cesar\"}>Cesar</Link></tr>\n                        <tr><Link to={\"./shift\"}>Shift</Link></tr>\n                    </ul>\n                </div>\n                <Switch>\n                    <Route path={\"/affine\"} component={AffineCypher}/>\n                    <Route path={\"/cesar\"} component={CeasaarCypher}/>\n                    <Route path={\"/shift\"} component={ShiftCypher}/>\n                    <Route path={\"/\"} component={Gcd}/>\n\n                </Switch>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}